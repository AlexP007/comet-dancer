# === Main ===

appname: 'App'

layout: 'main'

charset: 'UTF-8'

# If set to true, Dancer2 will look to X-Forwarded-Protocol and X-Forwarded-host.
behind_proxy: 1

# Template engine.
template: 'Xslate'

# Session engine.
session: 'Redis'

# === Engines ===

engines:

  # Dancer2::Template::Xslate.
  template:
    Xslate:
      location: 'views'

# === Plugins ===

plugins:

  # Dancer2::Plugin::Auth::Extensible::Provider::DBIC.
  Auth::Extensible:
    realms:
      users:
        provider: 'DBIC'

        # get_user_details return an inflated DBIC object.
        user_as_object: 1

        # Schema.
        users_resultset: User
        roles_resultset: Role
        user_roles_resultset: UserRoles

        # Columns.
        users_username_column: username
        users_password_column: password
        roles_role_column: role
        users_lastlogin_column: lastlogin
        users_pwresetcode_column: pw_reset_code
        users_pwchanged_column: pw_changed

        # Days after which passwords expire.
        password_expiry_days: 30

        # Optionally set additional conditions when searching for the
        # user in the database. These are the same format as required
        # by DBIC, and are passed directly to the DBIC resultset search.
        user_valid_conditions:
          deleted: 0

        # Key for the user's roles to be returned in.
        roles_key: roles

        # Optionally specify the algorithm when encrypting new passwords.
        encryption_algorithm: SHA-256

    # Not using DPAE routes and pages.
    no_default_pages: 1
#    no_login_handler: 1
    record_lastlogin: 1

  # Dancer2::Plugin::FormValidator.
  FormValidator:
    session:
      namespace: '_form_validator'
    extensions:
      password:
        provider: 'Dancer2::Plugin::FormValidator::Extension::Password'
      dbic:
        provider: 'Dancer2::Plugin::FormValidator::Extension::DBIC'
        database: 'default'
